name: update package version

description: |
  Create a commit that updates package.json's version,
  then tag it, and push the commit and tag.

  Requirement:
    - permissions:
        actions: write
        checks: write
        contents: write
    - env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

inputs:
  version:
    description: Version string.
    required: true
  package:
    description: Path to the directory which has package.json.
    default: "."
  commit_message_template:
    description: Template of commit message. You can use $VERSION as a given version string.
    default: v$VERSION
  tag_template:
    description: Template of tag name. You can use $VERSION as a given version string.
    default: v$VERSION
  tag_force:
    description: If true, the existing tag with the same name will be moved and pushed with force option.
    default: false

runs:
  using: composite
  steps:
    - name: Update version
      shell: bash
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        cd ${{ inputs.package }}

        if [ -e package.json ]; then
          cat <<< $(jq '.version = "${{ inputs.version }}"' package.json) > package.json
          git add package.json
          UPDATED=1
        fi
        if [ -e package-lock.json ]; then
          cat <<< $(jq '.version = "${{ inputs.version }}"' package-lock.json) > package-lock.json
          git add package-lock.json
          UPDATED=1
        fi

        if [ $UPDATED = 1 ]; then
          VERSION="${{ inputs.version }}"
          MESSAGE="${{ inputs.commit_message_template }}"
          TAG_NAME="${{ inputs.tag_template }}"

          git commit -m "$MESSAGE"

          if [ "${{ inputs.tag_force }}" = "true" ]; then
            git tag  -f "$TAG_NAME"
            git push -f origin HEAD
            git push -f origin "$TAG_NAME"
          else
            git tag "$TAG_NAME"
            git push origin HEAD
            git push origin "$TAG_NAME"
          fi
        else
          echo "No change to be pushed."
        fi
